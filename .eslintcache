[{"D:\\React Projects\\covid19-tracker\\src\\index.js":"1","D:\\React Projects\\covid19-tracker\\src\\App.js":"2","D:\\React Projects\\covid19-tracker\\src\\reportWebVitals.js":"3","D:\\React Projects\\covid19-tracker\\src\\components\\RightSection.js":"4","D:\\React Projects\\covid19-tracker\\src\\components\\Table\\Table.js":"5","D:\\React Projects\\covid19-tracker\\src\\utils.js":"6","D:\\React Projects\\covid19-tracker\\src\\components\\LineGraph\\LineGraph.js":"7","D:\\React Projects\\covid19-tracker\\src\\components\\Map\\Map.js":"8","D:\\React Projects\\covid19-tracker\\src\\components\\InfoBox\\InfoBox.js":"9","D:\\React Projects\\covid19-tracker\\src\\components\\HomePage\\home.js":"10"},{"size":500,"mtime":1610108196480,"results":"11","hashOfConfig":"12"},{"size":176,"mtime":1611930154840,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":540,"mtime":1611927030021,"results":"15","hashOfConfig":"12"},{"size":492,"mtime":1611913039906,"results":"16","hashOfConfig":"12"},{"size":1900,"mtime":1611912667176,"results":"17","hashOfConfig":"12"},{"size":2343,"mtime":1611926855370,"results":"18","hashOfConfig":"12"},{"size":616,"mtime":1611831175960,"results":"19","hashOfConfig":"12"},{"size":800,"mtime":1611826836395,"results":"20","hashOfConfig":"12"},{"size":4137,"mtime":1611930762267,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"pyoiu8",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},"D:\\React Projects\\covid19-tracker\\src\\index.js",[],["44","45"],"D:\\React Projects\\covid19-tracker\\src\\App.js",[],"D:\\React Projects\\covid19-tracker\\src\\reportWebVitals.js",[],"D:\\React Projects\\covid19-tracker\\src\\components\\RightSection.js",[],"D:\\React Projects\\covid19-tracker\\src\\components\\Table\\Table.js",[],"D:\\React Projects\\covid19-tracker\\src\\utils.js",[],"D:\\React Projects\\covid19-tracker\\src\\components\\LineGraph\\LineGraph.js",[],"D:\\React Projects\\covid19-tracker\\src\\components\\Map\\Map.js",[],"D:\\React Projects\\covid19-tracker\\src\\components\\InfoBox\\InfoBox.js",[],"D:\\React Projects\\covid19-tracker\\src\\components\\HomePage\\home.js",["46"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormControl, Select, MenuItem } from \"@material-ui/core\";\r\nimport \"./home.scss\";\r\nimport InfoBox from \"./../InfoBox/InfoBox\";\r\nimport Map from \"./../Map/Map\";\r\nimport RightSection from \"./../RightSection\";\r\nimport { sortData, prettyPrintStat } from \"./../../utils\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport logo from \"./../../images/logo.png\";\r\n\r\nfunction Home() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [country, setCountry] = useState(\"worldwide\");\r\n  const [countryInfo, setCountryInfo] = useState({});\r\n  const [tableData, setTableData] = useState([]);\r\n  const [mapCenter, setMapCenter] = useState({ lat: 27, lng: 30 });\r\n  const [mapZoom, setMapZoom] = useState(3);\r\n  const [mapCountries, setMapCountries] = useState([]);\r\n  const [casesType, setCasesType] = useState(\"cases\");\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://disease.sh/v3/covid-19/all\").then((response) => {\r\n      setCountryInfo(response.data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      await axios(\"https://disease.sh/v3/covid-19/countries\").then(\r\n        (response) => {\r\n          const countries = response.data.map((country) => ({\r\n            name: country.country,\r\n            value: country.countryInfo.iso2,\r\n          }));\r\n\r\n          const sortedData = sortData(response.data);\r\n          setTableData(sortedData);\r\n          setCountries(countries);\r\n          setMapCountries(response.data);\r\n        }\r\n      );\r\n    };\r\n    getCountriesData();\r\n  }, []);\r\n\r\n  const onCountryChange = async (event) => {\r\n    const countryCode = event.target.value;\r\n    const url =\r\n      countryCode === \"worldwide\"\r\n        ? \"https://disease.sh/v3/covid-19/all\"\r\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\r\n\r\n    await axios(url).then((response) => {\r\n      let data = response.data;\r\n\r\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\r\n      setMapZoom(4);\r\n      setCountry(countryCode);\r\n      setCountryInfo(data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home__left\">\r\n        <div className=\"home__header\">\r\n          {/* <FontAwesomeIcon icon={faUserNurse} /> */}\r\n          {/* <img src={logo} alt=\"logo\" /> */}\r\n          <h1>Stats Overview </h1>\r\n          <FormControl className=\"home__dropdown\">\r\n            <Select\r\n              variant=\"outlined\"\r\n              value={country}\r\n              onChange={onCountryChange}\r\n            >\r\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\r\n              {countries.map((country, index) => (\r\n                <MenuItem key={index} value={country.value}>\r\n                  {country.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n\r\n        <div className=\"home__stats\">\r\n          <InfoBox\r\n            title=\"Coronavirus Cases\"\r\n            onClick={(e) => setCasesType(\"cases\")}\r\n            isRed\r\n            active={casesType === \"cases\"}\r\n            cases={prettyPrintStat(countryInfo.todayCases)}\r\n            total={prettyPrintStat(countryInfo.cases)}\r\n          />\r\n          <InfoBox\r\n            title=\"Recovered\"\r\n            onClick={(e) => setCasesType(\"recovered\")}\r\n            active={casesType === \"recovered\"}\r\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\r\n            total={prettyPrintStat(countryInfo.recovered)}\r\n          />\r\n          <InfoBox\r\n            title=\"Deaths\"\r\n            onClick={(e) => setCasesType(\"deaths\")}\r\n            isRed\r\n            active={casesType === \"deaths\"}\r\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\r\n            total={prettyPrintStat(countryInfo.deaths)}\r\n          />\r\n        </div>\r\n        <Map\r\n          center={mapCenter}\r\n          zoom={mapZoom}\r\n          countries={mapCountries}\r\n          casesType={casesType}\r\n        />\r\n      </div>\r\n      <RightSection countries={tableData} casesType={casesType} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":10,"column":8,"nodeType":"53","messageId":"54","endLine":10,"endColumn":12},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]